{"version":3,"sources":["src/typing.js"],"names":[],"mappingsfile":"dist/typing.js","sourcesContent":["(function($) {\n\n\t//\n\t// Utility functions\n\t//\n\n\t// Checks if the given object is a function. Taken from underscorejs source code.\n\tfunction isFunction(obj) {\n\t\treturn !!(obj && obj.constructor && obj.call && obj.apply);\n\t}\n\n\t// Checks if the given object is an array.\n\tfunction isArray(obj) {\n\t\treturn toString(obj) === \"[object Array]\";\n\t}\n\n\t// Returns the same array skipping the first element.\n\tfunction tail(array) {\n\t\treturn array.slice(1);\n\t}\n\n\t// Returns the first element of the array.\n\tfunction head(array) {\n\t\treturn array[0];\n\t}\n\n\t// Drops the given number of characters from the end of the string\n\tfunction dropTail(string, n) {\n\t\treturn string.substr(0, string.length - n);\n\t}\n\n\t// Returns the original value with the given noise applied.\n\t// E.g. noise(x, 2) = x - 2 <= y <= x + 2\n\tfunction noise(x, delta) {\n\t\treturn Math.round(Math.random() * delta * 2 - delta) + x;\n\t}\n\n\t// Creates a function that takes a string, target and predicate.\n\t// The created function then takes a character from the given\n\t// string each time it is called until the predicate returns true.\n\t// After that, it starts adding the characters from the target\n\t// string until the current string has the same length as target.\n\tfunction makeTypeTo(current, target, predicate) {\n\t\tvar predicateIsTrue = false;\n\t\tvar current = current;\n\t\tvar target = target;\n\n\t\treturn function() {\n\t\t\tpredicateIsTrue = predicateIsTrue || predicate(current, target);\n\n\t\t\tif (predicateIsTrue && current.length >= target.length) {\n\t\t\t\treturn {current: current, isBackspace: false, isType: false, isDone: true};\n\t\t\t}\n\n\t\t\tvar prevLength = current.length;\n\t\t\tif (predicateIsTrue) {\n\t\t\t\tcurrent = current + target.charAt(current.length);\n\t\t\t} else {\n\t\t\t\tcurrent = dropTail(current, 1);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcurrent: current,\n\t\t\t\tisBackspace: current.length < prevLength,\n\t\t\t\tisType: current.length > prevLength,\n\t\t\t\tisDone: false\n\t\t\t};\n\t\t};\n\t}\n\n\t// Checks if the given prefix is prefix of target.\n\tfunction isPrefix(prefix, target) {\n\t\treturn target.substr(0, prefix.length) == prefix;\n\t}\n\n\t// Checks if the given string has length zero.\n\tfunction isEmpty(string) {\n\t\treturn string.length == 0;\n\t}\n\n\t//\n\t// Typying.js extension function.\n\t//\n\n\t$.fn.typing = function(options) {\n\n\t\t// SETTINGS\n\t\tvar settings = {\n\t\t\tsentences: ['Hello', 'Try your own sentences!', 'Don\\'t be lazy'],\n\t\t\tcaretChar: '_',\n\t\t\tcaretClass: 'typingjs__caret',\n\n\t\t\tignoreContent: false,\n\t\t\tignoreSentence: false,\n\t\t\ttypeDelay: 50,\n\t\t\tsentenceDelay: 750,\n\t\t\thumanize: true,\n\n\t\t\tonType: undefined,\n\t\t\tonBackspace: undefined,\n\t\t\tonFinish: undefined,\n\t\t\tonSentenceFinish: undefined\n\t\t};\n\t\t$.extend(settings, options);\n\n\t\treturn this.each(function() {\n\n\t\t\t// Sets up element\n\t\t\tvar this_ = $(this);\n\t\t\tvar text = '';\n\t\t\tif (!settings.ignoreContent) {\n\t\t\t\ttext = this_.text();\n\t\t\t\tif (this_.children('.typingjs__content').length > 0)\n\t\t\t\t\ttext = this_.children('.typingjs__content').text();\n\t\t\t}\n\n\t\t\tvar $content = $('<span>', { class: 'typingjs__content', text: text});\n\t\t\tvar $caret = $('<span>', { class: settings.caretClass, text: settings.caretChar });\n\n\t\t\tthis_.empty();\n\t\t\tthis_.append($content);\n\t\t\tthis_.append($caret);\n\n\t\t\t// Variable for sentences state\n\t\t\tvar sentencesLeft = settings.sentences;\n\n\t\t\tfunction typeSentence(typeTo) {\n\t\t\t\t// Reads next iteration of the typing animation.\n\t\t\t\tvar next = typeTo();\n\t\t\t\tvar current = next.current;\n\t\t\t\tvar isBackspace = next.isBackspace;\n\t\t\t\tvar isType = next.isType;\n\t\t\t\tvar isDone = next.isDone;\n\n\t\t\t\t$content.text(current);\n\n\t\t\t\tif (isDone) {\n\t\t\t\t\tif (isFuncion(settings.onSentenceFinish))\n\t\t\t\t\t\tsettings.onSentenceFinish.call(this_);\n\t\t\t\t\ttypeArray();\n\t\t\t\t} else {\n\t\t\t\t\t// Callbacks.\n\t\t\t\t\tif (isType && isFunction(settings.onType))\n\t\t\t\t\t\tsettings.onType.call(this_);\n\t\t\t\t\tif (isBackspace && isFuncion(settings.onBackspace))\n\t\t\t\t\t\tsettings.onBackspace.call(this_);\n\n\t\t\t\t\t// Next step\n\t\t\t\t\tvar humanTimeout = settings.typeDelay;\n\t\t\t\t\tif (settings.humanize)\n\t\t\t\t\t\thumanTimeout = noise(settings.typeDelay, settings.typeDelay);\n\t\t\t\t\tsetTimeout(typeSentence, humanTimeout, typeTo);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction typeArray() {\n\t\t\t\tvar targetStr = head(sentencesLeft);\n\t\t\t\tsentencesLeft = tail(sentencesLeft);\n\t\t\t\tif (targetStr !== undefined) {\n\t\t\t\t\tconst typeTo = makeTypeTo(\n\t\t\t\t\t\t$content.text(),\n\t\t\t\t\t\ttargetStr,\n\t\t\t\t\t\tsettings.ignoreSentence ? isEmpty : isPrefix\n\t\t\t\t\t);\n\t\t\t\t\tsetTimeout(typeSentence, settings.sentenceDelay, typeTo);\n\t\t\t\t}\n\t\t\t\telse if (isFunction(settings.onFinish)) {\n\t\t\t\t\tsettings.onFinish.call(this_);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypeArray();\n\n\t\t}); // each\n\t}; // function typing\n})(jQuery);\n"]}